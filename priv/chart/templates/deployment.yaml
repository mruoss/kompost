---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kompost.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "kompost.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "kompost.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kompost.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kompost.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}      {{ if not .Values.webhook.certManager.enabled }}
      initContainers:
        - args:
            - eval
            - Kompost.Webhooks.bootstrap_tls(:prod, "{{ include "kompost.fullname" . }}-webhook-tls")
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          name: init-certificates
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.containerSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 4000
              name: webhooks
              protocol: TCP
          env:
            - name : MIX_ENV
              value: prod
            - name: BONNY_OPERATOR_NAME
              value: {{ include "kompost.fullname" . }}
            - name: BONNY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: BONNY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: BONNY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: BONNY_POD_SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: KOMPO_POSTGRES_ENABLED
              value: "{{ ternary "true" "false" .Values.kompos.postgres.enabled }}"
            - name: KOMPO_TEMPORAL_ENABLED
              value: "{{ ternary "true" "false" .Values.kompos.temporal.enabled }}"
          # Not implemented yet:
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: certs
              mountPath: /mnt/cert
              readOnly: true
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: certs
          secret:
            optional: true
            secretName: {{ include "kompost.fullname" . }}-webhook-tls
