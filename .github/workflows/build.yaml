name: Build and Publish
on:
  workflow_run:
    workflows: ["Run Tests"]
  push:
    tags: [v*]

permissions:
  contents: write
  checks: read

env:
  MIX_ENV: prod
  KUBECONFIG: /home/runner/.kube/config
  ELIXIR_IMAGE: elixir:1.14.3-otp-24
  ERLANG_IMAGE: erlang:24.3.4.7

jobs:
  build_release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [alpine]
    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set Vars
        run: |
          TAG=${{ github.ref_name }}
          ARCH=${{ matrix.arch }}

          echo "DOCKER_TAG_VERSION=${TAG#v}" >> $GITHUB_ENV
          echo "DOCKER_TAG_ARCH=${ARCH%%-*}" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: mruoss/kompost:${{ env.DOCKER_TAG_VERSION }}-${{ env.DOCKER_TAG_ARCH }}
          platforms: linux/amd64,linux/arm64/v8,linux/arm
          build-args: |
            ERLANG_IMAGE=${{ env.ERLANG_IMAGE }}-${{ matrix.arch }}
            ELIXIR_IMAGE=${{ env.ELIXIR_IMAGE }}-${{ matrix.arch }}
      - name: Prepare release notes
        run: |
          csplit -s CHANGELOG.md "/##/" {1}
          cat xx01 > release_nots.md

      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: true
          prerelease: false
          release_name: ${{ github.ref_name }}
          tag_name: ${{ github.ref }}
          body_path: release_nots.md
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Setup elixir
        id: beam
        uses: erlef/setup-beam@v1
        with:
          elixir-version: 1.14.x
          otp-version: 25.x
      - name: Install Mix Dependencies
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
      - name: build manifest
        run: |
          mix bonny.gen.manifest -o manifest-${{ matrix.arch }}.yaml
      - name: upload manifest as artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./manifest-${{ matrix.arch }}.yaml
          asset_name: manifest-${{ matrix.arch }}.yaml
          asset_content_type: application/yaml
